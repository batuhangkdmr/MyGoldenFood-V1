@using Microsoft.Extensions.Localization
@using System.Linq

@{
    ViewData["Title"] = "Donuk Gıda Tarifleri | Dondurulmuş Gıda ile Lezzetli Tarifler | My Golden Food";
    Layout = "_Layout";
}

<!-- SEO Meta Etiketleri -->
<head>
    <meta name="description" content="Donuk gıda ile hazırlanan lezzetli tarifler. Dondurulmuş meyve, sebze ve hazır gıdalarla pratik yemek tarifleri. Flash freezing teknolojisi ile korunan besin değeri ile sağlıklı tarifler.">
    <meta name="keywords" content="donuk gıda tarifleri, dondurulmuş gıda tarifleri, dondurulmuş meyve tarifleri, dondurulmuş sebze tarifleri, flash freezing tarifleri, pratik yemek tarifleri, sağlıklı donuk gıda tarifleri">
    <meta name="author" content="My Golden Food">
    <meta name="robots" content="index, follow">
    <meta property="og:title" content="Donuk Gıda Tarifleri | Dondurulmuş Gıda ile Lezzetli Tarifler">
    <meta property="og:description" content="Donuk gıda ile hazırlanan lezzetli tarifler. Dondurulmuş meyve, sebze ve hazır gıdalarla pratik yemek tarifleri.">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://mygoldenfood.com/tarifler">
    <meta property="og:image" content="https://res.cloudinary.com/dbhogeepn/image/upload/v1743859767/mygolden_foood_a25y69.png">
    <link rel="canonical" href="https://mygoldenfood.com/tarifler">
</head>

<!-- Ana H1 Başlık - SEO için kritik -->
<h1 class="seo-main-title" style="position: absolute; left: -9999px; width: 1px; height: 1px; overflow: hidden;">
    Donuk Gıda Tarifleri | Dondurulmuş Gıda ile Lezzetli ve Pratik Yemek Tarifleri | Flash Freezing Teknolojisi
</h1>

<!-- Bottom Sheet Toggle Button -->
<button class="sidebar-toggle d-md-none" onclick="openBottomSheet()">
    <i class="fas fa-bars"></i>
    <span>Kategoriler</span>
</button>

<!-- Sidebar Overlay - Artık kullanılmıyor -->

<div class="container-fluid" style="margin-top: 100px;">
    <div class="row">
        <!-- Sol Sidebar - Kategoriler -->
        <div class="col-lg-3 col-md-4">
            <div class="modern-desktop-sidebar">
                <div class="sidebar-header">
                    <h3>Kategoriler</h3>
                </div>
                <div class="desktop-categories-container">
                    <!-- Tüm Kategoriler -->
                    <div class="desktop-category-section">
                        <div class="desktop-category-main @(ViewBag.SelectedCategoryId == 0 ? "active" : "")"
                             onclick="loadAllRecipes()"
                             data-category-id="0">
                            <div class="desktop-category-icon">
                                <i class="fas fa-th-large"></i>
                            </div>
                            <div class="desktop-category-details">
                                <h4>Tüm Kategoriler</h4>
                                <span>@(ViewBag.DefaultRecipes?.Count ?? 0) tarif</span>
                            </div>
                        </div>
                    </div>

                    @foreach (var category in (IEnumerable<MyGoldenFood.Models.RecipeCategory>)ViewBag.Categories)
                    {
                        @if (category.Level == 0)
                        {
                            <div class="desktop-category-section">
                                <!-- Ana Kategori -->
                                <div class="desktop-category-main @(ViewBag.SelectedCategoryId == category.Id ? "active" : "")"
                                     onclick="loadRecipesByCategory(@category.Id, '@category.Name')"
                                     data-category-id="@category.Id">
                                    <div class="desktop-category-icon">
                                        @if (!string.IsNullOrEmpty(category.ImagePath))
                                        {
                                            <img src="@category.ImagePath" alt="@category.Name" />
                                        }
                                        else
                                        {
                                            <i class="fas fa-utensils"></i>
                                        }
                                    </div>
                                    <div class="desktop-category-details">
                                        <h4>@category.Name</h4>
                                        <span>@(category.Recipes?.Count + category.ChildCategories?.Sum(c => c.Recipes?.Count ?? 0) ?? 0) tarif</span>
                                    </div>
                                    @if (category.ChildCategories != null && category.ChildCategories.Any())
                                    {
                                        <div class="desktop-expand-btn" onclick="toggleDesktopCategory(this); event.stopPropagation();">
                                            <i class="fas fa-chevron-down"></i>
                                        </div>
                                    }
                                </div>

                                <!-- Alt Kategoriler -->
                                @if (category.ChildCategories != null && category.ChildCategories.Any())
                                {
                                    <div class="desktop-subcategory-list" style="display: none;">
                                        @foreach (var childCategory in category.ChildCategories.OrderBy(c => c.SortOrder).ThenBy(c => c.Name))
                                        {
                                            <div class="desktop-subcategory-item" onclick="selectCategoryFromBottomSheet(@childCategory.Id, '@childCategory.Name')">
                                                <div class="desktop-subcategory-icon">
                                                    @if (!string.IsNullOrEmpty(childCategory.ImagePath))
                                                    {
                                                        <img src="@childCategory.ImagePath" alt="@childCategory.Name" />
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-circle"></i>
                                                    }
                                                </div>
                                                <div class="desktop-subcategory-details">
                                                    <span>@childCategory.Name</span>
                                                    <small>@(childCategory.Recipes?.Count ?? 0) tarif</small>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Sağ Content - Tarifler -->
        <div class="col-lg-9 col-md-8">
            <div class="content-container">
                <div class="content-header">
                    <h2 class="text-white mb-4" id="categoryTitle">
                        @if (ViewBag.HasCategories)
                        {
                            @ViewBag.FirstCategoryName
                        }
                    </h2>
                </div>

                <!-- Loading Spinner -->
                <div id="loadingSpinner" class="text-center" style="display: none;">
                    <div class="spinner-border text-light" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                </div>

                <!-- Recipes Content -->
                <div id="recipesContent">
                    @if (ViewBag.DefaultRecipes != null && ViewBag.DefaultRecipes.Count > 0)
                    {
                        <div class="recipe-grid" id="recipeGrid">
                            @foreach (var recipe in ViewBag.DefaultRecipes)
                            {
                                <div class="recipe-card"
                                     data-name="@recipe.Name"
                                     data-content="@recipe.Content">
                                    <div class="image-container"
                                         data-name="@recipe.Name"
                                         data-description="@recipe.Content">
                                        @if (!string.IsNullOrEmpty(recipe.ImagePath))
                                        {
                                            var cloudinaryService = ViewBag.CloudinaryService as MyGoldenFood.Services.CloudinaryService;
                                            <picture>
                                                <source media="(max-width: 768px)"
                                                        srcset="@cloudinaryService?.GetMobileImageUrl(recipe.ImagePath)">
                                                <source media="(max-width: 1200px)"
                                                        srcset="@cloudinaryService?.GetTabletImageUrl(recipe.ImagePath)">
                                                <img src="@cloudinaryService?.GetDesktopImageUrl(recipe.ImagePath)"
                                                     alt="@recipe.Name | Donuk Gıda Tarifi | Dondurulmuş Gıda ile Hazırlanan Tarif"
                                                     class="recipe-image"
                                                     title="@recipe.Name - Donuk Gıda Tarifi"
                                                     loading="lazy" />
                                            </picture>
                                        }
                                        else
                                        {
                                            <div class="bg-secondary text-white d-flex align-items-center justify-content-center recipe-image">
                                                <i class="fas fa-utensils fa-3x"></i>
                                            </div>
                                        }
                                    </div>
                                    <div class="recipe-name-container">
                                        <h3 class="recipe-name">@recipe.Name</h3>
                                    </div>
                                </div>
                            }
                        </div>
                        
                        <!-- Sayfalama Butonları -->
                        <div class="pagination">
                            <button id="prevPage" class="btn btn-primary" disabled>@Html.T("Back")</button>
                            <span id="pageNumber">@Html.T("Page")</span>
                            <button id="nextPage" class="btn btn-primary">@Html.T("Next")</button>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-info-circle fa-3x mb-3"></i>
                            <h4>Bu kategoride henüz tarif bulunmuyor</h4>
                            <p>Yakında lezzetli tarifler eklenecek!</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom Popup Modal -->
<div id="customModal" class="custom-modal">
    <div class="custom-modal-content">
        <div class="custom-modal-header">
            <h4 id="customModalTitle"></h4>
            <span class="custom-modal-close" onclick="closeCustomModal()">&times;</span>
        </div>
        <div class="custom-modal-body">
            <h5 class="custom-modal-title-with-line">@Html.T("RecipeDetails")</h5>
            <p id="customModalDescription"></p>
        </div>
    </div>
</div>

<!-- Bottom Sheet Categories -->
<div id="bottomSheetOverlay" class="bottom-sheet-overlay" onclick="closeBottomSheet()"></div>
<div id="bottomSheet" class="bottom-sheet">
    <div class="bottom-sheet-handle" onclick="closeBottomSheet()"></div>
    <div class="bottom-sheet-header">
        <h3 class="bottom-sheet-title">Kategoriler</h3>
    </div>
    <div class="modern-categories-container">
        <!-- Tüm Kategoriler -->
        <div class="category-section">
            <div class="category-main" onclick="selectCategoryFromBottomSheet(0, 'Tüm Kategoriler')">
                <div class="category-icon">
                    <i class="fas fa-th-large"></i>
                </div>
                <div class="category-details">
                    <h4>Tüm Kategoriler</h4>
                    <span>@(ViewBag.DefaultRecipes?.Count ?? 0) tarif</span>
                </div>
            </div>
        </div>

        @foreach (var category in (IEnumerable<MyGoldenFood.Models.RecipeCategory>)ViewBag.Categories)
        {
            @if (category.Level == 0)
            {
                <div class="category-section">
                    <!-- Ana Kategori -->
                    <div class="category-main" onclick="selectCategoryFromBottomSheet(@category.Id, '@category.Name')">
                        <div class="category-icon">
                            @if (!string.IsNullOrEmpty(category.ImagePath))
                            {
                                <img src="@category.ImagePath" alt="@category.Name" />
                            }
                            else
                            {
                                <i class="fas fa-utensils"></i>
                            }
                        </div>
                        <div class="category-details">
                            <h4>@category.Name</h4>
                            <span>@(category.Recipes?.Count + category.ChildCategories?.Sum(c => c.Recipes?.Count ?? 0) ?? 0) tarif</span>
                        </div>
                        @if (category.ChildCategories != null && category.ChildCategories.Any())
                        {
                            <div class="expand-btn" onclick="toggleCategory(this, event)">
                                <i class="fas fa-chevron-down"></i>
                            </div>
                        }
                    </div>

                    <!-- Alt Kategoriler -->
                    @if (category.ChildCategories != null && category.ChildCategories.Any())
                    {
                        <div class="subcategory-list" style="display: none;">
                            @foreach (var childCategory in category.ChildCategories.OrderBy(c => c.SortOrder).ThenBy(c => c.Name))
                            {
                                <div class="subcategory-item" onclick="selectCategoryFromBottomSheet(@childCategory.Id, '@childCategory.Name')">
                                    <div class="subcategory-icon">
                                        @if (!string.IsNullOrEmpty(childCategory.ImagePath))
                                        {
                                            <img src="@childCategory.ImagePath" alt="@childCategory.Name" />
                                        }
                                        else
                                        {
                                            <i class="fas fa-circle"></i>
                                        }
                                    </div>
                                    <div class="subcategory-details">
                                        <span>@childCategory.Name</span>
                                        <small>@(childCategory.Recipes?.Count ?? 0) tarif</small>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>

<style>
    /* Modern Glassmorphism Dashboard Background */
    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
    }

    /* Eski glass-sidebar CSS'leri kaldırıldı */

    .sidebar-content {
        padding: 24px;
    }

    /* Categories List */
    .categories-list {
        max-height: 65vh;
        overflow-y: auto;
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.06);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 20px;
        margin-bottom: 16px;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

        .glass-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 2px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transform: scaleX(0);
            transition: transform 0.4s ease;
        }

        .glass-card:hover::before {
            transform: scaleX(1);
        }

        .glass-card:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateY(-4px) scale(1.02);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3);
            border-color: rgba(102, 126, 234, 0.3);
        }

        .glass-card.active {
            background: rgba(102, 126, 234, 0.15);
            border-color: rgba(102, 126, 234, 0.4);
            box-shadow: 0 0 25px rgba(102, 126, 234, 0.3);
        }

            .glass-card.active::before {
                transform: scaleX(1);
            }

    .card-content {
        padding: 20px;
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .card-icon {
        width: 56px;
        height: 56px;
        border-radius: 16px;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.1);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        transition: all 0.3s ease;
    }

    .glass-card:hover .card-icon {
        background: rgba(102, 126, 234, 0.2);
        transform: scale(1.1);
    }

    .category-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .glass-card:hover .category-image {
        transform: scale(1.1);
    }

    .icon-placeholder {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #667eea;
        font-size: 1.4rem;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.2), rgba(118, 75, 162, 0.2));
    }

    .card-info {
        flex: 1;
        min-width: 0;
    }

    .card-title {
        color: #ffffff;
        margin: 0 0 4px 0;
        font-size: 1.1rem;
        font-weight: 600;
        line-height: 1.3;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .card-subtitle {
        color: rgba(255, 255, 255, 0.6);
        margin: 0;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .card-action {
        color: rgba(255, 255, 255, 0.4);
        font-size: 1rem;
        transition: all 0.3s ease;
        opacity: 0;
        transform: translateX(-10px);
    }

    .glass-card:hover .card-action {
        opacity: 1;
        transform: translateX(0);
        color: #667eea;
    }

    /* Content Container */
    .content-container {
        padding: 0 24px;
    }

    .content-header {
        margin-bottom: 32px;
    }

        .content-header h2 {
            color: #ffffff;
            font-size: 3.2rem;
            font-weight: 700;
            margin: 0;
            background: linear-gradient(135deg, #d9b41b, #e7a400);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);
        }

    /* Recipe Grid Layout */
    .recipe-grid {
        min-height: 600px;
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 20px;
        justify-content: flex-start;
        align-items: start;
    }
    
    /* Placeholder tarifler için şeffaf bir görünüm */
    .recipe-placeholder {
        visibility: hidden; /* Görünmez olacak */
        height: 250px;
    }

        /* Eğer tarif sayısı 3'ten azsa, ortalama yap */
        .recipe-grid:has(.recipe-card:nth-child(1):nth-last-child(1)),
        .recipe-grid:has(.recipe-card:nth-child(1):nth-last-child(2)) {
            display: flex;
            justify-content: start;
            gap: 20px;
        }

    /* Recipe Cards */
    .recipe-card {
        overflow: hidden;
        text-align: center;
        border-radius: 15px;
        background-color: rgba(0, 0, 0, 0);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
    }

        .recipe-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transform: scaleX(0);
            transition: transform 0.4s ease;
        }

        .recipe-card:hover::before {
            transform: scaleX(1);
        }

        .recipe-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

    .image-container {
        width: 100%;
        height: 200px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #000;
        overflow: hidden;
        border-radius: 15px;
    }

    .recipe-image {
        width: 100%;
        height: 100%;
        object-fit: contain;
        object-position: center;
        transition: transform 0.3s ease;
    }

    .image-container:hover .recipe-image {
        transform: scale(1.1);
    }

    /* Tarif Adı */
    .recipe-name-container {
        padding: 15px;
        background-color: rgba(0, 0, 0, 0);
        border-radius: 0 0 15px 15px;
        color: #fff;
    }

    .recipe-name {
        margin: 0;
        font-size: 1.2rem;
        color: #fff;
    }

    /* Responsive Design */

    /* Tablet görünümü (768px - 1024px) */
    @@media (max-width: 1024px) and (min-width: 769px) {
        .recipe-grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    @@media (max-width: 768px) {
        /* Eski glass-sidebar CSS'leri kaldırıldı */

        .sidebar-toggle {
            display: block;
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1001;
            background: linear-gradient(135deg, #d7b41f, #987318);
            border: none;
            color: white;
            padding: 16px;
            border-radius: 50px;
            width: auto;
            height: auto;
            font-size: 1rem;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .sidebar-toggle i {
                font-size: 1.2rem;
            }
        /* Eski sidebar-overlay CSS'leri kaldırıldı */

        .glass-sidebar.collapsed {
            max-height: none;
        }

        .sidebar-content {
            padding: 12px;
        }

        .categories-list {
            max-height: none;
            overflow: visible;
            display: flex;
            flex-direction: column;
            gap: 8px;
            padding-bottom: 10px;
        }

        .glass-card {
            margin-bottom: 0;
            width: 100%;
            min-width: unset;
            max-width: unset;
        }

        .card-content {
            padding: 10px;
        }

        .card-icon {
            width: 36px;
            height: 36px;
        }

        .card-title {
            font-size: 0.85rem;
            margin-bottom: 2px;
        }

        .card-subtitle {
            font-size: 0.75rem;
        }

        .card-action {
            display: none;
        }

        .content-container {
            padding: 0 0;
        }

        .content-header h2 {
            font-size: 1.8rem;
            font-weight: 800;
            text-transform: uppercase;
            text-align: start;
        }

        .recipe-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .recipe-card {
            /*  padding: 15px; */
        }

        .recipe-image {
            height: 180px;
        }
        /* Mobil için recipe-card responsive düzenlemeleri */
        .recipe-name {
            font-size: 1rem;
        }
        

        
        /* Mobilde sidebar'ın tam görünmesi için */
        .col-lg-3.col-md-4 {
            margin-bottom: 20px;
        }


        /* Mobilde yatay scroll için özel stiller */
        .categories-list::-webkit-scrollbar {
            height: 6px;
        }

        .categories-list::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 3px;
        }

        .categories-list::-webkit-scrollbar-thumb {
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 3px;
        }

            .categories-list::-webkit-scrollbar-thumb:hover {
                background: linear-gradient(90deg, #5a6fd8, #6a5acd);
            }
    }

    /* Scrollbar Styling */
    .categories-list::-webkit-scrollbar {
        width: 8px;
    }

    .categories-list::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 4px;
    }

    .categories-list::-webkit-scrollbar-thumb {
        background: linear-gradient(180deg, #667eea, #764ba2);
        border-radius: 4px;
    }

        .categories-list::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(180deg, #5a6fd8, #6a5acd);
        }

    /* Custom Modal Styling */
    .custom-modal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(5px);
        animation: fadeIn 0.3s ease-out;
    }

    .custom-modal-content {
        background: rgba(0, 0, 0, 0.95);
        color: white;
        border: 2px solid rgba(102, 126, 234, 0.3);
        border-radius: 20px;
        margin: 15% auto;
        padding: 0;
        width: 90%;
        max-width: 600px;
        position: relative;
        transform: scale(0.8);
        animation: scaleIn 0.3s ease-out forwards;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.8);
    }

    .custom-modal-header {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.2), rgba(118, 75, 162, 0.2));
        padding: 20px 25px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 18px 18px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .custom-modal-header h4 {
            margin: 0;
            font-size: 1.5rem;
            font-weight: 600;
            color: #ffffff;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
        }

    .custom-modal-close {
        color: rgba(255, 255, 255, 0.7);
        font-size: 2rem;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
        line-height: 1;
        padding: 5px;
        border-radius: 50%;
        width: 35px;
        height: 35px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .custom-modal-close:hover {
            color: #ffffff;
            background: rgba(255, 255, 255, 0.1);
            transform: scale(1.1);
        }

    .custom-modal-body {
        padding: 25px;
        max-height: 60vh;
        overflow-y: auto;
    }

    .custom-modal-title-with-line {
        position: relative;
        display: inline-block;
        padding-bottom: 10px;
        font-size: 1.3rem;
        color: #FFD700;
        margin-bottom: 20px;
        font-weight: 600;
    }

        .custom-modal-title-with-line::after {
            content: "";
            display: block;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, #FFD700, #FFA500);
            border-radius: 2px;
            position: absolute;
            bottom: 0;
            left: 0;
        }

    /* Custom Modal Animations */
    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@keyframes scaleIn {
        from {
            transform: scale(0.8);
        }

        to {
            transform: scale(1);
        }
    }

    /* Custom Modal Responsive */
    @@media (max-width: 768px) {
        .custom-modal-content {
            width: 95%;
            margin: 20% auto;
        }

        .custom-modal-header {
            padding: 15px 20px;
        }

            .custom-modal-header h4 {
                font-size: 1.3rem;
            }

        .custom-modal-body {
            padding: 20px;
        }
    }

    /* Samsung SE ve çok küçük ekranlar için */
    @@media (max-width: 375px) {
        .custom-modal-content {
            margin: 15% auto;
            max-height: 70vh;
        }

        .custom-modal-body {
            max-height: 50vh;
            padding: 15px;
        }
    }

    /* Loading Spinner */
    #loadingSpinner {
        padding: 48px;
    }

    .spinner-border {
        color: #667eea !important;
    }

    /* Animation Classes */
    .fade-in {
        animation: fadeIn 0.6s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .slide-in {
        animation: slideIn 0.5s ease-out;
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(-30px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
</style>

<script>
    // Tüm tarifleri yükle
    function loadAllRecipes() {
        // Loading spinner'ı göster
        document.getElementById('loadingSpinner').style.display = 'block';
        document.getElementById('recipesContent').style.display = 'none';

        // Aktif kategoriyi güncelle
        document.querySelectorAll('.glass-card').forEach(item => {
            item.classList.remove('active');
        });
        document.querySelector('[data-category-id="0"]').classList.add('active');

        // Kategori başlığını güncelle
        document.getElementById('categoryTitle').textContent = 'Tüm Kategoriler';

        // AJAX ile tüm tarifleri yükle
        fetch('/Tarifler/GetAllRecipes')
            .then(response => response.json())
            .then(data => {
                // HTML'i manuel olarak oluştur
                let html = '';
                if (data && data.length > 0) {
                    html = '<div class="recipe-grid" id="recipeGrid">';
                    data.forEach(recipe => {
                        html += `
                            <div class="recipe-card"
                                 data-name="${recipe.name}"
                                 data-content="${recipe.content}">
                                <div class="image-container"
                                     data-name="${recipe.name}"
                                     data-description="${recipe.content}">
                                    ${recipe.imagePath ?
                                        `<picture>
                                            <source media="(max-width: 768px)" srcset="${getMobileImageUrl(recipe.imagePath)}">
                                            <source media="(max-width: 1200px)" srcset="${getTabletImageUrl(recipe.imagePath)}">
                                            <img src="${getDesktopImageUrl(recipe.imagePath)}"
                                                 alt="${recipe.name} | Donuk Gıda Tarifi | Dondurulmuş Gıda ile Hazırlanan Tarif"
                                                 class="recipe-image"
                                                 title="${recipe.name} - Donuk Gıda Tarifi"
                                                 loading="lazy" />
                                         </picture>` :
                                        `<div class="bg-secondary text-white d-flex align-items-center justify-content-center recipe-image">
                                             <i class="fas fa-utensils fa-3x"></i>
                                         </div>`
                                    }
                                </div>
                                <div class="recipe-name-container">
                                    <h3 class="recipe-name">${recipe.name}</h3>
                                </div>
                            </div>
                        `;
                    });
                    html += '</div>';
                    
                } else {
                    html = `
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-info-circle fa-3x mb-3"></i>
                            <h4>Henüz tarif bulunmuyor</h4>
                            <p>Yakında lezzetli tarifler eklenecek!</p>
                        </div>
                    `;
                }

                document.getElementById('recipesContent').innerHTML = html;
                document.getElementById('loadingSpinner').style.display = 'none';
                document.getElementById('recipesContent').style.display = 'block';
                
                // Pagination'ı yeniden başlat
                initPagination();

                // Fade-in animasyonu ekle
                document.getElementById('recipesContent').classList.add('fade-in');

                // Event listener'ları yeniden ekle
                attachRecipeCardEvents();
                
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('loadingSpinner').style.display = 'none';
                document.getElementById('recipesContent').style.display = 'block';
            });
    }

    // Kategori seçiminde tarifleri yükle
    function loadRecipesByCategory(categoryId, categoryName) {
        console.log('loadRecipesByCategory çağrıldı:', { categoryId, categoryName });

        // Loading spinner'ı göster
        document.getElementById('loadingSpinner').style.display = 'block';
        document.getElementById('recipesContent').style.display = 'none';

        // Aktif kategoriyi güncelle
        document.querySelectorAll('.desktop-category-main').forEach(item => {
            item.classList.remove('active');
        });

        const activeCategory = document.querySelector(`[data-category-id="${categoryId}"]`);
        if (activeCategory) {
            activeCategory.classList.add('active');
        }

        // Kategori başlığını güncelle
        document.getElementById('categoryTitle').textContent = categoryName;



        // AJAX ile tarifleri yükle
        console.log('AJAX çağrısı yapılıyor:', `/Tarifler/GetRecipesByCategory/${categoryId}`);

        // Alt kategori mi kontrol et (ParentCategoryId'si olan kategoriler)
        let apiUrl = `/Tarifler/GetRecipesByCategory/${categoryId}`;

        // Alt kategoriler: ID 19 (Frambuzlı Tarifler), ID 20 (Çilekli Tarifler)
        if (categoryId === 19 || categoryId === 20) {
            apiUrl = `/Tarifler/GetRecipesBySubcategory?recipeCategoryId=${categoryId}`;
            console.log('Alt kategori için özel metot kullanılıyor:', apiUrl);
        }

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                console.log('API Response:', data);
                console.log('Tarif sayısı:', data.length);

                // HTML'i manuel olarak oluştur
                let html = '';
                if (data && data.length > 0) {
                    html = '<div class="recipe-grid" id="recipeGrid">';
                    data.forEach(recipe => {
                        html += `
                            <div class="recipe-card"
                                 data-name="${recipe.name}"
                                 data-content="${recipe.content}">
                                <div class="image-container"
                                     data-name="${recipe.name}"
                                     data-description="${recipe.content}">
                                    ${recipe.imagePath ?
                                        `<picture>
                                            <source media="(max-width: 768px)" srcset="${getMobileImageUrl(recipe.imagePath)}">
                                            <source media="(max-width: 1200px)" srcset="${getTabletImageUrl(recipe.imagePath)}">
                                            <img src="${getDesktopImageUrl(recipe.imagePath)}"
                                                 alt="${recipe.name} | Donuk Gıda Tarifi | Dondurulmuş Gıda ile Hazırlanan Tarif"
                                                 class="recipe-image"
                                                 title="${recipe.name} - Donuk Gıda Tarifi"
                                                 loading="lazy" />
                                         </picture>` :
                                        `<div class="bg-secondary text-white d-flex align-items-center justify-content-center recipe-image">
                                             <i class="fas fa-utensils fa-3x"></i>
                                         </div>`
                                    }
                                </div>
                                <div class="recipe-name-container">
                                    <h3 class="recipe-name">${recipe.name}</h3>
                                </div>
                            </div>
                        `;
                    });
                    html += '</div>';
                    
                } else {
                    html = `
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-info-circle fa-3x mb-3"></i>
                            <h4>Bu kategoride henüz tarif bulunmuyor</h4>
                            <p>Yakında lezzetli tarifler eklenecek!</p>
                        </div>
                    `;
                }

                document.getElementById('recipesContent').innerHTML = html;
                document.getElementById('loadingSpinner').style.display = 'none';
                document.getElementById('recipesContent').style.display = 'block';
                
                // Pagination'ı yeniden başlat
                initPagination();

                // Fade-in animasyonu ekle
                document.getElementById('recipesContent').classList.add('fade-in');

                // Event listener'ları yeniden ekle
                attachRecipeCardEvents();
                
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('loadingSpinner').style.display = 'none';
                document.getElementById('recipesContent').style.display = 'block';
            });
    }

    // Tarif kartlarına event listener ekle
    function attachRecipeCardEvents() {
        document.querySelectorAll('.image-container').forEach(item => {
            item.addEventListener('click', function() {
                let name = this.getAttribute('data-name');
                let description = this.getAttribute('data-description');

                if (!name || !description) {
                    alert('Tarif detayları eksik!');
                    return;
                }

                // Custom modal'ı aç
                openCustomModal(name, description);
            });
        });
    }

    // Custom modal'ı aç
    function openCustomModal(name, description) {
        document.getElementById('customModalTitle').textContent = name;
        document.getElementById('customModalDescription').innerHTML = description.replace(/\n/g, "<br>");
        document.getElementById('customModal').style.display = 'block';

        // Body scroll'unu engelle
        document.body.style.overflow = 'hidden';
    }

    // Custom modal'ı kapat
    function closeCustomModal() {
        document.getElementById('customModal').style.display = 'none';

        // Body scroll'unu geri yükle
        document.body.style.overflow = 'auto';
    }

    // Modal dışına tıklandığında kapat
    document.addEventListener('click', function(event) {
        const modal = document.getElementById('customModal');
        if (event.target === modal) {
            closeCustomModal();
        }
    });

    // ESC tuşu ile modal'ı kapat
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            closeCustomModal();
        }
    });

            // Eski sidebar fonksiyonları kaldırıldı - artık sadece Bottom Sheet kullanılıyor

        // Bottom Sheet fonksiyonları
        function openBottomSheet() {
            document.getElementById('bottomSheetOverlay').classList.add('show');
            document.getElementById('bottomSheet').classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function closeBottomSheet() {
            document.getElementById('bottomSheetOverlay').classList.remove('show');
            document.getElementById('bottomSheet').classList.remove('show');
            document.body.style.overflow = 'auto';
            
            // Mobil sidebar'ı da kapat
            const sidebarToggle = document.querySelector('.sidebar-toggle');
            if (sidebarToggle && sidebarToggle.classList.contains('show')) {
                sidebarToggle.classList.remove('show');
            }
            
            // Alt kategori listelerini kapat
            document.querySelectorAll('.subcategory-list').forEach(list => {
                list.style.display = 'none';
            });
            
            // Desktop alt kategori listelerini de kapat
            document.querySelectorAll('.desktop-subcategory-list').forEach(list => {
                list.style.display = 'none';
            });

            // Expand icon'ları sıfırla (chevron-down yap)
            document.querySelectorAll('.expand-icon, .desktop-expand-btn i').forEach(icon => {
                icon.classList.remove('fa-chevron-up');
                icon.classList.add('fa-chevron-down');
            });
        }

        function selectCategoryFromBottomSheet(categoryId, categoryName) {
            console.log('selectCategoryFromBottomSheet çağrıldı:', { categoryId, categoryName });

            // Bottom sheet'i kapat
            closeBottomSheet();

            // Kategori seçimini yap
            if (categoryId === 0) {
                loadAllRecipes();
            } else {
                loadRecipesByCategory(categoryId, categoryName);
            }

            // Bottom sheet'teki aktif kategoriyi güncelle
            document.querySelectorAll('.category-card-new').forEach(card => {
                card.classList.remove('active');
            });
            event.currentTarget.classList.add('active');
        }

        // Yeni kategori toggle fonksiyonu
        function toggleCategory(element, event) {
            event.stopPropagation();

            const subcategoryList = element.parentElement.parentElement.querySelector('.subcategory-list');
            const expandIcon = element.querySelector('.fas');

            if (subcategoryList.style.display === 'none' || subcategoryList.style.display === '') {
                subcategoryList.style.display = 'block';
                expandIcon.classList.remove('fa-chevron-down');
                expandIcon.classList.add('fa-chevron-up');
                element.parentElement.classList.add('expanded');
            } else {
                subcategoryList.style.display = 'none';
                expandIcon.classList.remove('fa-chevron-up');
                expandIcon.classList.add('fa-chevron-down');
                element.parentElement.classList.remove('expanded');
            }
        }

        // Desktop kategori toggle fonksiyonu - Sadece alt kategorileri açıp kapatır
        function toggleDesktopCategory(element) {
            // Event propagation'ı durdur (parent elementlere tıklama olayını iletme)
            event.stopPropagation();
            
            // Basit çözüm: parentElement kullan
            const categorySection = element.parentElement.parentElement;
            const subcategoryList = categorySection.querySelector('.desktop-subcategory-list');
            const expandIcon = element.querySelector('.fas') || element.querySelector('i') || element.children[0];

            if (subcategoryList && expandIcon) {
                if (subcategoryList.style.display === 'none' || subcategoryList.style.display === '') {
                    subcategoryList.style.display = 'block';
                    expandIcon.classList.remove('fa-chevron-down');
                    expandIcon.classList.add('fa-chevron-up');
                } else {
                    subcategoryList.style.display = 'none';
                    expandIcon.classList.remove('fa-chevron-up');
                    expandIcon.classList.add('fa-chevron-down');
                }
            }
        }





        // Sayfa yüklendiğinde event listener'ları ekle
        document.addEventListener('DOMContentLoaded', function() {
            attachRecipeCardEvents();
            initPagination();

            // İlk kategoriyi (Tüm Kategoriler) aktif yap
            const firstCategory = document.querySelector('[data-category-id="0"]');
            if (firstCategory) {
                firstCategory.classList.add('active');
            }
        });

        // Pagination Sistemi - Products ile aynı
        let allRecipes = [];
        const pageSize = 15; // Sayfa başına tarif sayısı
        let currentPage = 1;

        function initPagination() {
            allRecipes = document.querySelectorAll(".recipe-card");
            showPage(currentPage);
        }

        function showPage(page) {
            let totalRecipes = allRecipes.length;
            let start = (page - 1) * pageSize;
            let end = page * pageSize;
            let visibleRecipes = [];

            // Mevcut tarifleri göster
            allRecipes.forEach((recipe, index) => {
                if (index >= start && index < end) {
                    recipe.style.display = "block";
                    visibleRecipes.push(recipe);
                } else {
                    recipe.style.display = "none";
                }
            });

            // Eksik tarifleri placeholder ile tamamla
            let missingCount = pageSize - visibleRecipes.length;
            document.querySelectorAll(".recipe-placeholder").forEach(e => e.remove()); // Önceki placeholder'ları temizle

            for (let i = 0; i < missingCount; i++) {
                let placeholder = document.createElement("div");
                placeholder.classList.add("recipe-card", "recipe-placeholder");
                document.getElementById('recipeGrid').appendChild(placeholder);
            }

            // Sayfa numarasını güncelle
            document.getElementById("pageNumber").textContent = `@Html.T("Page") ${page}`;
            document.getElementById("prevPage").disabled = (page === 1);
            document.getElementById("nextPage").disabled = (page * pageSize >= totalRecipes);
        }

        // Pagination event listeners
        document.getElementById("prevPage").addEventListener("click", function () {
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
                // Sayfa değişiminde en üste scroll yap
                scrollToTop();
            }
        });

        document.getElementById("nextPage").addEventListener("click", function () {
            if (currentPage * pageSize < allRecipes.length) {
                currentPage++;
                showPage(currentPage);
                // Sayfa değişiminde en üste scroll yap
                scrollToTop();
            }
        });

        // Sayfanın en üstüne scroll yapma fonksiyonu
        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth' // Smooth scroll animasyonu
            });
        }
</script>

<style>
    /* Sayfalama Butonları - Bootstrap CDN'den sonra yüklenir */
    .pagination {
        margin-top: 30px;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 15px;
        padding: 20px 0;
        list-style: none;
        border-radius: 0;
    }

    .pagination button {
        background: rgba(255, 255, 255, 0.1) !important;
        border: 2px solid rgba(255, 215, 0, 0.3) !important;
        color: #FFD700 !important;
        padding: 12px 24px !important;
        border-radius: 25px !important;
        font-weight: 600 !important;
        font-size: 14px !important;
        text-transform: uppercase !important;
        letter-spacing: 1px !important;
        transition: all 0.3s ease !important;
        backdrop-filter: blur(10px) !important;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2) !important;
        position: relative !important;
        overflow: hidden !important;
        outline: none !important;
        text-decoration: none !important;
        cursor: pointer !important;
    }

    .pagination button:hover:not(:disabled) {
        background: rgba(255, 215, 0, 0.2) !important;
        border-color: #FFD700 !important;
        color: #fff !important;
        transform: translateY(-2px) !important;
        box-shadow: 0 8px 25px rgba(255, 215, 0, 0.3) !important;
    }

    .pagination button:active:not(:disabled) {
        transform: translateY(0) !important;
        box-shadow: 0 4px 15px rgba(255, 215, 0, 0.2) !important;
    }

    .pagination button:disabled {
        background: rgba(128, 128, 128, 0.2) !important;
        border-color: rgba(128, 128, 128, 0.3) !important;
        color: rgba(128, 128, 128, 0.7) !important;
        cursor: not-allowed !important;
        transform: none !important;
        box-shadow: none !important;
    }

    .pagination button:disabled:hover {
        background: rgba(128, 128, 128, 0.2) !important;
        border-color: rgba(128, 128, 128, 0.3) !important;
        color: rgba(128, 128, 128, 0.7) !important;
        transform: none !important;
        box-shadow: none !important;
    }

    /* Focus ve Active durumları için altın tema - !important ile Bootstrap override */
    .pagination button:focus {
        background: rgba(255, 215, 0, 0.2) !important;
        border-color: #FFD700 !important;
        color: #FFD700 !important;
        box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25) !important;
        outline: none !important;
    }

    .pagination button:active {
        background: rgba(255, 215, 0, 0.3) !important;
        border-color: #FFD700 !important;
        color: #fff !important;
        transform: translateY(0) !important;
        box-shadow: 0 4px 15px rgba(255, 215, 0, 0.3) !important;
    }

    .pagination button:focus:not(:disabled) {
        background: rgba(255, 215, 0, 0.2) !important;
        border-color: #FFD700 !important;
        color: #FFD700 !important;
        box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25) !important;
    }

    .pagination #pageNumber {
        color: #fbdb66;
        font-weight: 600;
        font-size: 16px;
        padding: 10px 20px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 20px;
        border: 1px solid rgba(255, 215, 0, 0.2);
        backdrop-filter: blur(5px);
        min-width: 100px;
        text-align: center;
        display: inline-block;
    }

    /* Mobilde pagination butonları */
    @@media (max-width: 950px) {
        .pagination {
            margin-top: 20px;
            gap: 10px;
            padding: 15px 0;
        }

        .pagination button {
            padding: 10px 18px;
            font-size: 12px;
            border-radius: 20px;
        }

        .pagination #pageNumber {
            padding: 8px 15px;
            font-size: 14px;
            min-width: 80px;
        }
    }

    /* Küçük mobil cihazlar için */
    @@media (max-width: 480px) {
        .pagination {
            flex-direction: row;
            gap: 8px;
            flex-wrap: wrap;
            justify-content: center;
        }

        .pagination button {
            padding: 8px 16px;
            font-size: 11px;
            min-width: 60px;
        }

        .pagination #pageNumber {
            padding: 6px 12px;
            font-size: 13px;
            min-width: 70px;
            order: 2;
        }

        .pagination #prevPage {
            order: 1;
        }

        .pagination #nextPage {
            order: 3;
        }
    }

    /* Çok küçük ekranlar için (320px ve altı) */
    @@media (max-width: 320px) {
        .pagination {
            gap: 5px;
        }

        .pagination button {
            padding: 6px 12px;
            font-size: 10px;
            min-width: 50px;
        }

        .pagination #pageNumber {
            padding: 5px 10px;
            font-size: 12px;
            min-width: 60px;
        }
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // 🚀 HIZ ODAKLI Responsive resim URL helper fonksiyonu (Mobil-First)
        function getResponsiveImageUrl(imagePath, width, height = 0) {
            if (!imagePath) return '';

            // Cloudinary transformation URL oluştur
            const baseUrl = imagePath.split('/upload/')[0] + '/upload/';
            const publicId = imagePath.split('/upload/')[1];

            let transformation = `w_${width}`;
            if (height > 0) transformation += `,h_${height}`;
            // 🎯 HIZ ODAKLI: q_70, f_auto, fl_immutable_cache
            transformation += ',c_fit,q_70,f_auto,fl_immutable_cache';

            return `${baseUrl}${transformation}/${publicId}`;
        }

        // 📱 Mobil-First Optimizasyon (Mobil trafik %90)
        function getMobileImageUrl(imagePath) {
            return getResponsiveImageUrl(imagePath, 200, 150); // Ultra hızlı mobil
        }

        function getTabletImageUrl(imagePath) {
            return getResponsiveImageUrl(imagePath, 400, 300); // Tablet için optimal
        }

        function getDesktopImageUrl(imagePath) {
            return getResponsiveImageUrl(imagePath, 600, 450); // Desktop için yeterli
        }
    </script>
}
